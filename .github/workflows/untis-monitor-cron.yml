# .github/workflows/untis-monitor-cron.yml
name: Build & Deploy (cron)

on:
  workflow_dispatch:
  schedule:
    # Mo–Fr, alle 30 Minuten von 05:00–18:00 Europe/Berlin
    # GitHub Actions läuft in UTC → 03:00–16:00 UTC
    - cron: "*/30 3-16 * * 1-5"

concurrency:
  group: untis-monitor-cron
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/Berlin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # wir wollen committen/pushen

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers (Chromium)
        # requirements.txt enthält playwright==1.46.0 → Browser + System-Dependencies installieren
        run: |
          python -m playwright install --with-deps chromium

      - name: Run scrape → normalize → build
        run: |
          set -e
          python untis_monitor_scrape.py
          # Normalizer optional (falls nicht vorhanden/kein Output) → weiterbauen
          python untis_normalize.py || echo "[warn] untis_normalize.py did not produce outputs (continuing)"
          python build_site.py

      - name: Debug workspace (top-level)
        run: |
          echo "[debug] top-level files:"
          ls -la
          echo "[debug] .gitignore (if any):"
          if [[ -f .gitignore ]]; then cat .gitignore; else echo "(none)"; fi

      - name: Publish folder (site → docs)
        run: |
          rm -rf docs
          mkdir -p docs
          if [ -d site ]; then
            cp -a site/. docs/
          else
            echo "[warn] site/ directory not found"
          fi
          # Jekyll deaktivieren, damit JSON etc. unverändert served werden
          touch docs/.nojekyll

      - name: Attach extra artifacts (root → docs if present)
        run: |
          shopt -s nullglob
          for f in untis_subst_normalized.json untis_subst_normalized.csv debug_meta.json report_all.html; do
            if [[ -f "$f" ]]; then
              echo "[info] copying $f → docs/"
              cp -f "$f" docs/
            fi
          done
          # Falls nur report_all.html existiert, als index.html ablegen
          if [[ -f "docs/report_all.html" && ! -f "docs/index.html" ]]; then
            cp -f docs/report_all.html docs/index.html
          fi

      - name: List docs content
        run: |
          echo "[debug] docs content:"; ls -la docs

      - name: Cache-bust report assets
        run: python tools/cache_bust_site.py docs

      - name: Commit & push only if /docs changed (force-add JSON/CSV)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          echo "[debug] git status before add:"; git status --porcelain docs || true

          # Force-add, falls .gitignore JSON/CSV/HTML ausblendet
          shopt -s nullglob
          force=(docs/*.json docs/*.csv docs/report_all.html)
          if [ ${#force[@]} -gt 0 ]; then
            echo "[debug] force-adding: ${force[@]}"
            git add -f ${force[@]} || true
          fi

          # Normales Add für alle anderen Änderungen
          git add -A docs || true

          echo "[debug] git status after add:"; git status --porcelain docs || true

          if [[ -n "$(git diff --cached --name-only -- docs)" ]]; then
            git commit -m "Auto-build: update docs ($(date -u +"%Y-%m-%d %H:%M:%S UTC")) [skip ci]"
            git push origin HEAD:${{ github.ref_name }}
            echo "Changes pushed."
          else
            echo "No staged changes in /docs – skipping commit."
          fi
